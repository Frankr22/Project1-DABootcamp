{
 "cells": [
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 7,
   "id": "949f838f",
||||||| a05349c
   "execution_count": 64,
   "id": "8cf2a42e",
=======
   "execution_count": 1,
   "id": "b81365c6",
>>>>>>> netflix_rf
   "metadata": {},
   "outputs": [],
   "source": [
    "#dependencies\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import calendar\n",
    "import datetime\n",
    "\n",
    "%matplotlib notebook"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 8,
   "id": "432be367",
   "metadata": {},
||||||| a05349c
   "execution_count": 65,
   "id": "2008e9ec",
   "metadata": {},
=======
   "execution_count": 2,
   "id": "147fbf59",
   "metadata": {
    "scrolled": true
   },
>>>>>>> netflix_rf
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>show_id</th>\n",
       "      <th>type</th>\n",
       "      <th>title</th>\n",
       "      <th>director</th>\n",
       "      <th>cast</th>\n",
       "      <th>country</th>\n",
       "      <th>date_added</th>\n",
       "      <th>release_year</th>\n",
       "      <th>rating</th>\n",
       "      <th>duration</th>\n",
       "      <th>listed_in</th>\n",
       "      <th>description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>s1</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Dick Johnson Is Dead</td>\n",
       "      <td>Kirsten Johnson</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United States</td>\n",
       "      <td>September 25, 2021</td>\n",
       "      <td>2020</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>90 min</td>\n",
       "      <td>Documentaries</td>\n",
       "      <td>As her father nears the end of his life, filmm...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>s2</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Blood &amp; Water</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
       "      <td>After crossing paths at a party, a Cape Town t...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>s3</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Ganglands</td>\n",
       "      <td>Julien Leclercq</td>\n",
       "      <td>Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Crime TV Shows, International TV Shows, TV Act...</td>\n",
       "      <td>To protect his family from a powerful drug lor...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>s4</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Jailbirds New Orleans</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Docuseries, Reality TV</td>\n",
       "      <td>Feuds, flirtations and toilet talk go down amo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>s5</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Kota Factory</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...</td>\n",
       "      <td>India</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, Romantic TV Shows, TV ...</td>\n",
       "      <td>In a city of coaching centers known to train I...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  show_id     type                  title         director  \\\n",
       "0      s1    Movie   Dick Johnson Is Dead  Kirsten Johnson   \n",
       "1      s2  TV Show          Blood & Water              NaN   \n",
       "2      s3  TV Show              Ganglands  Julien Leclercq   \n",
       "3      s4  TV Show  Jailbirds New Orleans              NaN   \n",
       "4      s5  TV Show           Kota Factory              NaN   \n",
       "\n",
       "                                                cast        country  \\\n",
       "0                                                NaN  United States   \n",
       "1  Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...   South Africa   \n",
       "2  Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...            NaN   \n",
       "3                                                NaN            NaN   \n",
       "4  Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...          India   \n",
       "\n",
       "           date_added  release_year rating   duration  \\\n",
       "0  September 25, 2021          2020  PG-13     90 min   \n",
       "1  September 24, 2021          2021  TV-MA  2 Seasons   \n",
       "2  September 24, 2021          2021  TV-MA   1 Season   \n",
       "3  September 24, 2021          2021  TV-MA   1 Season   \n",
       "4  September 24, 2021          2021  TV-MA  2 Seasons   \n",
       "\n",
       "                                           listed_in  \\\n",
       "0                                      Documentaries   \n",
       "1    International TV Shows, TV Dramas, TV Mysteries   \n",
       "2  Crime TV Shows, International TV Shows, TV Act...   \n",
       "3                             Docuseries, Reality TV   \n",
       "4  International TV Shows, Romantic TV Shows, TV ...   \n",
       "\n",
       "                                         description  \n",
       "0  As her father nears the end of his life, filmm...  \n",
       "1  After crossing paths at a party, a Cape Town t...  \n",
       "2  To protect his family from a powerful drug lor...  \n",
       "3  Feuds, flirtations and toilet talk go down amo...  \n",
       "4  In a city of coaching centers known to train I...  "
      ]
     },
<<<<<<< HEAD
     "execution_count": 8,
||||||| a05349c
     "execution_count": 65,
=======
     "execution_count": 2,
>>>>>>> netflix_rf
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#load file\n",
    "file = 'Data/netflix_titles.csv'\n",
    "netflix_df = pd.read_csv(file)\n",
    "netflix_df.head()"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 9,
   "id": "38f8d8d4",
||||||| a05349c
   "execution_count": 66,
   "id": "a2250f9d",
=======
   "execution_count": 3,
   "id": "57f13648",
>>>>>>> netflix_rf
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 0 duplicates.\n"
     ]
    }
   ],
   "source": [
    "# Check for Duplicates in Title\n",
    "duplicates = netflix_df.duplicated().sum()\n",
    "if duplicates > 0:\n",
    "    print('There are no duplicated entries.')\n",
    "else:\n",
    "    print(f'There are {duplicates} duplicates.')"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 10,
   "id": "b0ee855a",
||||||| a05349c
   "execution_count": 67,
   "id": "c8d0c367",
=======
   "execution_count": 4,
   "id": "c5e889c2",
>>>>>>> netflix_rf
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number of titles is 8807\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "show_id         8807\n",
       "type            8807\n",
       "title           8807\n",
       "director        6173\n",
       "cast            7982\n",
       "country         7976\n",
       "date_added      8797\n",
       "release_year    8807\n",
       "rating          8803\n",
       "duration        8804\n",
       "listed_in       8807\n",
       "description     8807\n",
       "dtype: int64"
      ]
     },
<<<<<<< HEAD
     "execution_count": 10,
||||||| a05349c
     "execution_count": 67,
=======
     "execution_count": 4,
>>>>>>> netflix_rf
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Identify incomplete rows\n",
    "length = len(netflix_df.index)\n",
    "print(f\"The number of titles is {length}\")\n",
    "netflix_df.count()\n",
    "# The following columns contained null values, “director,” “cast,” “country,” “date_added,” “rating.”, \"duration\""
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 11,
   "id": "f65f76a7",
||||||| a05349c
   "execution_count": 68,
   "id": "bb216d15",
=======
   "execution_count": 5,
   "id": "6639d0da",
>>>>>>> netflix_rf
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>show_id</th>\n",
       "      <th>type</th>\n",
       "      <th>title</th>\n",
       "      <th>director</th>\n",
       "      <th>cast</th>\n",
       "      <th>country</th>\n",
       "      <th>date_added</th>\n",
       "      <th>release_year</th>\n",
       "      <th>rating</th>\n",
       "      <th>duration</th>\n",
       "      <th>listed_in</th>\n",
       "      <th>description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>s1</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Dick Johnson Is Dead</td>\n",
       "      <td>Kirsten Johnson</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United States</td>\n",
       "      <td>September 25, 2021</td>\n",
       "      <td>2020</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>90 min</td>\n",
       "      <td>Documentaries</td>\n",
       "      <td>As her father nears the end of his life, filmm...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>s2</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Blood &amp; Water</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
       "      <td>After crossing paths at a party, a Cape Town t...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>s3</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Ganglands</td>\n",
       "      <td>Julien Leclercq</td>\n",
       "      <td>Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Crime TV Shows, International TV Shows, TV Act...</td>\n",
       "      <td>To protect his family from a powerful drug lor...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>s4</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Jailbirds New Orleans</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Docuseries, Reality TV</td>\n",
       "      <td>Feuds, flirtations and toilet talk go down amo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>s5</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Kota Factory</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...</td>\n",
       "      <td>India</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, Romantic TV Shows, TV ...</td>\n",
       "      <td>In a city of coaching centers known to train I...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8795</th>\n",
       "      <td>s8796</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Yu-Gi-Oh! Arc-V</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mike Liscio, Emily Bauer, Billy Bob Thompson, ...</td>\n",
       "      <td>Japan, Canada</td>\n",
       "      <td>May 1, 2018</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-Y7</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>Anime Series, Kids' TV</td>\n",
       "      <td>Now that he's discovered the Pendulum Summonin...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8796</th>\n",
       "      <td>s8797</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Yunus Emre</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Gökhan Atalay, Payidar Tüfekçioglu, Baran Akbu...</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>January 17, 2017</td>\n",
       "      <td>2016</td>\n",
       "      <td>TV-PG</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, TV Dramas</td>\n",
       "      <td>During the Mongol invasions, Yunus Emre leaves...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8797</th>\n",
       "      <td>s8798</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Zak Storm</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Michael Johnston, Jessica Gee-George, Christin...</td>\n",
       "      <td>United States, France, South Korea, Indonesia</td>\n",
       "      <td>September 13, 2018</td>\n",
       "      <td>2016</td>\n",
       "      <td>TV-Y7</td>\n",
       "      <td>3 Seasons</td>\n",
       "      <td>Kids' TV</td>\n",
       "      <td>Teen surfer Zak Storm is mysteriously transpor...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8800</th>\n",
       "      <td>s8801</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Zindagi Gulzar Hai</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sanam Saeed, Fawad Khan, Ayesha Omer, Mehreen ...</td>\n",
       "      <td>Pakistan</td>\n",
       "      <td>December 15, 2016</td>\n",
       "      <td>2012</td>\n",
       "      <td>TV-PG</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>International TV Shows, Romantic TV Shows, TV ...</td>\n",
       "      <td>Strong-willed, middle-class Kashaf and carefre...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8803</th>\n",
       "      <td>s8804</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Zombie Dumb</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>July 1, 2019</td>\n",
       "      <td>2018</td>\n",
       "      <td>TV-Y7</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>Kids' TV, Korean TV Shows, TV Comedies</td>\n",
       "      <td>While living alone in a spooky town, a young g...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3475 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     show_id     type                  title         director  \\\n",
       "0         s1    Movie   Dick Johnson Is Dead  Kirsten Johnson   \n",
       "1         s2  TV Show          Blood & Water              NaN   \n",
       "2         s3  TV Show              Ganglands  Julien Leclercq   \n",
       "3         s4  TV Show  Jailbirds New Orleans              NaN   \n",
       "4         s5  TV Show           Kota Factory              NaN   \n",
       "...      ...      ...                    ...              ...   \n",
       "8795   s8796  TV Show        Yu-Gi-Oh! Arc-V              NaN   \n",
       "8796   s8797  TV Show             Yunus Emre              NaN   \n",
       "8797   s8798  TV Show              Zak Storm              NaN   \n",
       "8800   s8801  TV Show     Zindagi Gulzar Hai              NaN   \n",
       "8803   s8804  TV Show            Zombie Dumb              NaN   \n",
       "\n",
       "                                                   cast  \\\n",
       "0                                                   NaN   \n",
       "1     Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...   \n",
       "2     Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...   \n",
       "3                                                   NaN   \n",
       "4     Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...   \n",
       "...                                                 ...   \n",
       "8795  Mike Liscio, Emily Bauer, Billy Bob Thompson, ...   \n",
       "8796  Gökhan Atalay, Payidar Tüfekçioglu, Baran Akbu...   \n",
       "8797  Michael Johnston, Jessica Gee-George, Christin...   \n",
       "8800  Sanam Saeed, Fawad Khan, Ayesha Omer, Mehreen ...   \n",
       "8803                                                NaN   \n",
       "\n",
       "                                            country          date_added  \\\n",
       "0                                     United States  September 25, 2021   \n",
       "1                                      South Africa  September 24, 2021   \n",
       "2                                               NaN  September 24, 2021   \n",
       "3                                               NaN  September 24, 2021   \n",
       "4                                             India  September 24, 2021   \n",
       "...                                             ...                 ...   \n",
       "8795                                  Japan, Canada         May 1, 2018   \n",
       "8796                                         Turkey    January 17, 2017   \n",
       "8797  United States, France, South Korea, Indonesia  September 13, 2018   \n",
       "8800                                       Pakistan   December 15, 2016   \n",
       "8803                                            NaN        July 1, 2019   \n",
       "\n",
       "      release_year rating   duration  \\\n",
       "0             2020  PG-13     90 min   \n",
       "1             2021  TV-MA  2 Seasons   \n",
       "2             2021  TV-MA   1 Season   \n",
       "3             2021  TV-MA   1 Season   \n",
       "4             2021  TV-MA  2 Seasons   \n",
       "...            ...    ...        ...   \n",
       "8795          2015  TV-Y7  2 Seasons   \n",
       "8796          2016  TV-PG  2 Seasons   \n",
       "8797          2016  TV-Y7  3 Seasons   \n",
       "8800          2012  TV-PG   1 Season   \n",
       "8803          2018  TV-Y7  2 Seasons   \n",
       "\n",
       "                                              listed_in  \\\n",
       "0                                         Documentaries   \n",
       "1       International TV Shows, TV Dramas, TV Mysteries   \n",
       "2     Crime TV Shows, International TV Shows, TV Act...   \n",
       "3                                Docuseries, Reality TV   \n",
       "4     International TV Shows, Romantic TV Shows, TV ...   \n",
       "...                                                 ...   \n",
       "8795                             Anime Series, Kids' TV   \n",
       "8796                  International TV Shows, TV Dramas   \n",
       "8797                                           Kids' TV   \n",
       "8800  International TV Shows, Romantic TV Shows, TV ...   \n",
       "8803             Kids' TV, Korean TV Shows, TV Comedies   \n",
       "\n",
       "                                            description  \n",
       "0     As her father nears the end of his life, filmm...  \n",
       "1     After crossing paths at a party, a Cape Town t...  \n",
       "2     To protect his family from a powerful drug lor...  \n",
       "3     Feuds, flirtations and toilet talk go down amo...  \n",
       "4     In a city of coaching centers known to train I...  \n",
       "...                                                 ...  \n",
       "8795  Now that he's discovered the Pendulum Summonin...  \n",
       "8796  During the Mongol invasions, Yunus Emre leaves...  \n",
       "8797  Teen surfer Zak Storm is mysteriously transpor...  \n",
       "8800  Strong-willed, middle-class Kashaf and carefre...  \n",
       "8803  While living alone in a spooky town, a young g...  \n",
       "\n",
       "[3475 rows x 12 columns]"
      ]
     },
<<<<<<< HEAD
     "execution_count": 11,
||||||| a05349c
     "execution_count": 68,
=======
     "execution_count": 5,
>>>>>>> netflix_rf
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Drop all rows with missing information\n",
    "na_free = netflix_df.dropna(how='any')\n",
    "only_na = netflix_df[~netflix_df.index.isin(na_free.index)]\n",
    "only_na"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 12,
   "id": "378a83ae",
||||||| a05349c
   "execution_count": 69,
   "id": "ee25ff96",
=======
   "execution_count": 6,
   "id": "f257504f",
>>>>>>> netflix_rf
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "show_id         5332\n",
       "type            5332\n",
       "title           5332\n",
       "director        5332\n",
       "cast            5332\n",
       "country         5332\n",
       "date_added      5332\n",
       "release_year    5332\n",
       "rating          5332\n",
       "duration        5332\n",
       "listed_in       5332\n",
       "description     5332\n",
       "dtype: int64"
      ]
     },
<<<<<<< HEAD
     "execution_count": 12,
||||||| a05349c
     "execution_count": 69,
=======
     "execution_count": 6,
>>>>>>> netflix_rf
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Verify dropped rows\n",
    "na_free.count()\n",
    "# Drop or Impute ?? \n",
    "# Decide to not drop as would remove too much of the data and there are the,\n",
    "# missing information is not critical to the analysis"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 13,
   "id": "d0db6a7b",
||||||| a05349c
   "execution_count": 70,
   "id": "ef4e52db",
=======
   "execution_count": 7,
   "id": "efaa59f2",
>>>>>>> netflix_rf
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "show_id         object\n",
       "type            object\n",
       "title           object\n",
       "director        object\n",
       "cast            object\n",
       "country         object\n",
       "date_added      object\n",
       "release_year     int64\n",
       "rating          object\n",
       "duration        object\n",
       "listed_in       object\n",
       "description     object\n",
       "dtype: object"
      ]
     },
<<<<<<< HEAD
     "execution_count": 13,
||||||| a05349c
     "execution_count": 70,
=======
     "execution_count": 7,
>>>>>>> netflix_rf
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# verify data types in data set\n",
    "na_free.dtypes"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 14,
   "id": "c2969dc1",
||||||| a05349c
   "execution_count": 71,
   "id": "9aa1cbd2",
=======
   "execution_count": 8,
   "id": "72c461b9",
>>>>>>> netflix_rf
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "show_id                 object\n",
       "type                    object\n",
       "title                   object\n",
       "director                object\n",
       "cast                    object\n",
       "country                 object\n",
       "date_added      datetime64[ns]\n",
       "release_year             int64\n",
       "rating                  object\n",
       "duration                object\n",
       "listed_in               object\n",
       "description             object\n",
       "dtype: object"
      ]
     },
<<<<<<< HEAD
     "execution_count": 14,
||||||| a05349c
     "execution_count": 71,
=======
     "execution_count": 8,
>>>>>>> netflix_rf
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Change date_added to datetime format and\n",
    "netflix_df[\"date_added\"] = pd.to_datetime(netflix_df[\"date_added\"])\n",
    "netflix_df.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
<<<<<<< HEAD
   "id": "701309dc",
   "metadata": {},
   "source": []
||||||| a05349c
   "source": [],
   "metadata": {
    "collapsed": false
   }
=======
   "id": "28bdc69f",
   "metadata": {},
   "source": []
>>>>>>> netflix_rf
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 15,
   "id": "bb463b28",
   "metadata": {},
||||||| a05349c
   "execution_count": 72,
=======
   "execution_count": 9,
   "id": "cfb8704b",
   "metadata": {},
>>>>>>> netflix_rf
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>show_id</th>\n",
       "      <th>type</th>\n",
       "      <th>title</th>\n",
       "      <th>director</th>\n",
       "      <th>cast</th>\n",
       "      <th>country</th>\n",
       "      <th>date_added</th>\n",
       "      <th>release_year</th>\n",
       "      <th>rating</th>\n",
       "      <th>duration</th>\n",
       "      <th>listed_in</th>\n",
       "      <th>description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>s1</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Dick Johnson Is Dead</td>\n",
       "      <td>Kirsten Johnson</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United States</td>\n",
       "      <td>2021-09-25</td>\n",
       "      <td>2020</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>90 min</td>\n",
       "      <td>Documentaries</td>\n",
       "      <td>As her father nears the end of his life, filmm...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>s2</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Blood &amp; Water</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
       "      <td>After crossing paths at a party, a Cape Town t...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>s3</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Ganglands</td>\n",
       "      <td>Julien Leclercq</td>\n",
       "      <td>Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Crime TV Shows, International TV Shows, TV Act...</td>\n",
       "      <td>To protect his family from a powerful drug lor...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>s4</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Jailbirds New Orleans</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Docuseries, Reality TV</td>\n",
       "      <td>Feuds, flirtations and toilet talk go down amo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>s5</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Kota Factory</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...</td>\n",
       "      <td>India</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, Romantic TV Shows, TV ...</td>\n",
       "      <td>In a city of coaching centers known to train I...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8793</th>\n",
       "      <td>s8794</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Yours, Mine and Ours</td>\n",
       "      <td>Raja Gosnell</td>\n",
       "      <td>Dennis Quaid, Rene Russo, Sean Faris, Katija P...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2019-11-20</td>\n",
       "      <td>2005</td>\n",
       "      <td>PG</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>When a father of eight and a mother of 10 prep...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8798</th>\n",
       "      <td>s8799</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zed Plus</td>\n",
       "      <td>Chandra Prakash Dwivedi</td>\n",
       "      <td>Adil Hussain, Mona Singh, K.K. Raina, Sanjay M...</td>\n",
       "      <td>India</td>\n",
       "      <td>2019-12-31</td>\n",
       "      <td>2014</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>131 min</td>\n",
       "      <td>Comedies, Dramas, International Movies</td>\n",
       "      <td>A philandering small-town mechanic's political...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8802</th>\n",
       "      <td>s8803</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zodiac</td>\n",
       "      <td>David Fincher</td>\n",
       "      <td>Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2019-11-20</td>\n",
       "      <td>2007</td>\n",
       "      <td>R</td>\n",
       "      <td>158 min</td>\n",
       "      <td>Cult Movies, Dramas, Thrillers</td>\n",
       "      <td>A political cartoonist, a crime reporter and a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8804</th>\n",
       "      <td>s8805</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zombieland</td>\n",
       "      <td>Ruben Fleischer</td>\n",
       "      <td>Jesse Eisenberg, Woody Harrelson, Emma Stone, ...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2019-11-01</td>\n",
       "      <td>2009</td>\n",
       "      <td>R</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Comedies, Horror Movies</td>\n",
       "      <td>Looking to survive in a world taken over by zo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8805</th>\n",
       "      <td>s8806</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zoom</td>\n",
       "      <td>Peter Hewitt</td>\n",
       "      <td>Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2020-01-11</td>\n",
       "      <td>2006</td>\n",
       "      <td>PG</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>Dragged from civilian life, a former superhero...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3857 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     show_id     type                  title                 director  \\\n",
       "0         s1    Movie   Dick Johnson Is Dead          Kirsten Johnson   \n",
       "1         s2  TV Show          Blood & Water                      NaN   \n",
       "2         s3  TV Show              Ganglands          Julien Leclercq   \n",
       "3         s4  TV Show  Jailbirds New Orleans                      NaN   \n",
       "4         s5  TV Show           Kota Factory                      NaN   \n",
       "...      ...      ...                    ...                      ...   \n",
       "8793   s8794    Movie   Yours, Mine and Ours             Raja Gosnell   \n",
       "8798   s8799    Movie               Zed Plus  Chandra Prakash Dwivedi   \n",
       "8802   s8803    Movie                 Zodiac            David Fincher   \n",
       "8804   s8805    Movie             Zombieland          Ruben Fleischer   \n",
       "8805   s8806    Movie                   Zoom             Peter Hewitt   \n",
       "\n",
       "                                                   cast        country  \\\n",
       "0                                                   NaN  United States   \n",
       "1     Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...   South Africa   \n",
       "2     Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...            NaN   \n",
       "3                                                   NaN            NaN   \n",
       "4     Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...          India   \n",
       "...                                                 ...            ...   \n",
       "8793  Dennis Quaid, Rene Russo, Sean Faris, Katija P...  United States   \n",
       "8798  Adil Hussain, Mona Singh, K.K. Raina, Sanjay M...          India   \n",
       "8802  Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...  United States   \n",
       "8804  Jesse Eisenberg, Woody Harrelson, Emma Stone, ...  United States   \n",
       "8805  Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...  United States   \n",
       "\n",
       "     date_added  release_year rating   duration  \\\n",
       "0    2021-09-25          2020  PG-13     90 min   \n",
       "1    2021-09-24          2021  TV-MA  2 Seasons   \n",
       "2    2021-09-24          2021  TV-MA   1 Season   \n",
       "3    2021-09-24          2021  TV-MA   1 Season   \n",
       "4    2021-09-24          2021  TV-MA  2 Seasons   \n",
       "...         ...           ...    ...        ...   \n",
       "8793 2019-11-20          2005     PG     88 min   \n",
       "8798 2019-12-31          2014  TV-MA    131 min   \n",
       "8802 2019-11-20          2007      R    158 min   \n",
       "8804 2019-11-01          2009      R     88 min   \n",
       "8805 2020-01-11          2006     PG     88 min   \n",
       "\n",
       "                                              listed_in  \\\n",
       "0                                         Documentaries   \n",
       "1       International TV Shows, TV Dramas, TV Mysteries   \n",
       "2     Crime TV Shows, International TV Shows, TV Act...   \n",
       "3                                Docuseries, Reality TV   \n",
       "4     International TV Shows, Romantic TV Shows, TV ...   \n",
       "...                                                 ...   \n",
       "8793                 Children & Family Movies, Comedies   \n",
       "8798             Comedies, Dramas, International Movies   \n",
       "8802                     Cult Movies, Dramas, Thrillers   \n",
       "8804                            Comedies, Horror Movies   \n",
       "8805                 Children & Family Movies, Comedies   \n",
       "\n",
       "                                            description  \n",
       "0     As her father nears the end of his life, filmm...  \n",
       "1     After crossing paths at a party, a Cape Town t...  \n",
       "2     To protect his family from a powerful drug lor...  \n",
       "3     Feuds, flirtations and toilet talk go down amo...  \n",
       "4     In a city of coaching centers known to train I...  \n",
       "...                                                 ...  \n",
       "8793  When a father of eight and a mother of 10 prep...  \n",
       "8798  A philandering small-town mechanic's political...  \n",
       "8802  A political cartoonist, a crime reporter and a...  \n",
       "8804  Looking to survive in a world taken over by zo...  \n",
       "8805  Dragged from civilian life, a former superhero...  \n",
       "\n",
       "[3857 rows x 12 columns]"
      ]
     },
<<<<<<< HEAD
     "execution_count": 15,
||||||| a05349c
     "execution_count": 72,
=======
     "execution_count": 9,
>>>>>>> netflix_rf
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# remove Titles added pre November 1st 2019 to match the Disney data\n",
    "res = netflix_df[~(netflix_df['date_added'] < '2019-11-01')]\n",
    "res"
<<<<<<< HEAD
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4777767b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "show_id         3857\n",
       "type            3857\n",
       "title           3857\n",
       "director        2697\n",
       "cast            3532\n",
       "country         3364\n",
       "date_added      3847\n",
       "release_year    3857\n",
       "rating          3857\n",
       "duration        3857\n",
       "listed_in       3857\n",
       "description     3857\n",
       "dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
||||||| a05349c
=======
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "41f57209",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "show_id         3857\n",
       "type            3857\n",
       "title           3857\n",
       "director        2697\n",
       "cast            3532\n",
       "country         3364\n",
       "date_added      3847\n",
       "release_year    3857\n",
       "rating          3857\n",
       "duration        3857\n",
       "listed_in       3857\n",
       "description     3857\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
>>>>>>> netflix_rf
   ],
<<<<<<< HEAD
   "source": [
    "# count rows now dates have been removed\n",
    "res.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "98727f4a",
   "metadata": {},
   "outputs": [],
   "source": []
||||||| a05349c
   "metadata": {
    "collapsed": false
   }
=======
   "source": [
    "# count data source with dates removes\n",
    "res.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "e2d9746e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Movie      2632\n",
       "TV Show    1225\n",
       "Name: type, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# count data by type\n",
    "type_data = res['type'].value_counts()\n",
    "type(type_data)\n",
    "type_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "631c9042",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(1,2)\n",
    "\n",
    "#produce a map of type\n",
    "fig1 = type_data.plot(kind = \"bar\", figsize=(6,5),color=\"red\", title=\"Netflix shows by Type\",ax=axs[0])\n",
    "fig1.set_xlabel(\"Type\")\n",
    "fig1.set_ylabel(\"Count\")\n",
    "# Configure x-tick rotation\n",
    "xticklabels = type_data.index\n",
    "fig1.set_xticklabels(xticklabels, rotation=45, rotation_mode=\"anchor\", ha=\"right\", wrap=True)\n",
    "plt.savefig('Data/fig1.png')\n",
    "\n",
    "#pie chart\n",
    "fig2 = type_data.plot(kind = \"pie\", labels = type_data.index, figsize=(6,5),colors=['blue','green'], explode = (0.1,0),autopct='%1.1f%%',shadow=True, startangle=90, title=\"Netflix shows by Type\",ax=axs[1])\n",
    "plt.axis('equal')\n",
    "plt.tight_layout()\n",
    "plt.savefig('Data/fig2.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "66cb4496",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "United States     1242\n",
       "India              369\n",
       "Japan              127\n",
       "United Kingdom     113\n",
       "South Korea         82\n",
       "Nigeria             78\n",
       "Canada              63\n",
       "France              55\n",
       "Egypt               53\n",
       "Turkey              51\n",
       "Name: country, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#map by country\n",
    "country_data = res['country'].value_counts()\n",
    "country_data_map = country_data.head(10)\n",
    "country_data_map"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "eb8dcef3",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'figure3' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp\\ipykernel_27584\\1771356363.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;31m# Configure x-tick rotation\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      6\u001b[0m \u001b[0myticklabels\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mcountry_data_map\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 7\u001b[1;33m \u001b[0mfigure3\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mset_yticklabels\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0myticklabels\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrotation_mode\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m\"anchor\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mha\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m\"right\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mwrap\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      8\u001b[0m \u001b[0mplt\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      9\u001b[0m \u001b[0mplt\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mtight_layout\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'figure3' is not defined"
     ]
    }
   ],
   "source": [
    "#produce a map of type\n",
    "fig3 = country_data_map.plot(kind = \"barh\", figsize=(12,10),color=\"red\", title=\"Netflix shows by Country\")\n",
    "fig3.set_xlabel(\"Country\")\n",
    "fig3.set_ylabel(\"Count\")\n",
    "# Configure x-tick rotation\n",
    "yticklabels = country_data_map.index\n",
    "figure3.set_yticklabels(yticklabels, rotation_mode=\"anchor\", ha=\"right\", wrap=True)\n",
    "plt.show()\n",
    "plt.tight_layout()\n",
    "plt.savefig('Data/fig3.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "c376385d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>show_id</th>\n",
       "      <th>type</th>\n",
       "      <th>title</th>\n",
       "      <th>director</th>\n",
       "      <th>cast</th>\n",
       "      <th>country</th>\n",
       "      <th>date_added</th>\n",
       "      <th>release_year</th>\n",
       "      <th>rating</th>\n",
       "      <th>duration</th>\n",
       "      <th>listed_in</th>\n",
       "      <th>description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8793</th>\n",
       "      <td>s8794</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Yours, Mine and Ours</td>\n",
       "      <td>Raja Gosnell</td>\n",
       "      <td>Dennis Quaid, Rene Russo, Sean Faris, Katija P...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2019-11-20</td>\n",
       "      <td>2005</td>\n",
       "      <td>PG</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>When a father of eight and a mother of 10 prep...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8798</th>\n",
       "      <td>s8799</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zed Plus</td>\n",
       "      <td>Chandra Prakash Dwivedi</td>\n",
       "      <td>Adil Hussain, Mona Singh, K.K. Raina, Sanjay M...</td>\n",
       "      <td>India</td>\n",
       "      <td>2019-12-31</td>\n",
       "      <td>2014</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>131 min</td>\n",
       "      <td>Comedies, Dramas, International Movies</td>\n",
       "      <td>A philandering small-town mechanic's political...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8802</th>\n",
       "      <td>s8803</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zodiac</td>\n",
       "      <td>David Fincher</td>\n",
       "      <td>Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2019-11-20</td>\n",
       "      <td>2007</td>\n",
       "      <td>R</td>\n",
       "      <td>158 min</td>\n",
       "      <td>Cult Movies, Dramas, Thrillers</td>\n",
       "      <td>A political cartoonist, a crime reporter and a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8804</th>\n",
       "      <td>s8805</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zombieland</td>\n",
       "      <td>Ruben Fleischer</td>\n",
       "      <td>Jesse Eisenberg, Woody Harrelson, Emma Stone, ...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2019-11-01</td>\n",
       "      <td>2009</td>\n",
       "      <td>R</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Comedies, Horror Movies</td>\n",
       "      <td>Looking to survive in a world taken over by zo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8805</th>\n",
       "      <td>s8806</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zoom</td>\n",
       "      <td>Peter Hewitt</td>\n",
       "      <td>Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2020-01-11</td>\n",
       "      <td>2006</td>\n",
       "      <td>PG</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>Dragged from civilian life, a former superhero...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     show_id   type                 title                 director  \\\n",
       "8793   s8794  Movie  Yours, Mine and Ours             Raja Gosnell   \n",
       "8798   s8799  Movie              Zed Plus  Chandra Prakash Dwivedi   \n",
       "8802   s8803  Movie                Zodiac            David Fincher   \n",
       "8804   s8805  Movie            Zombieland          Ruben Fleischer   \n",
       "8805   s8806  Movie                  Zoom             Peter Hewitt   \n",
       "\n",
       "                                                   cast        country  \\\n",
       "8793  Dennis Quaid, Rene Russo, Sean Faris, Katija P...  United States   \n",
       "8798  Adil Hussain, Mona Singh, K.K. Raina, Sanjay M...          India   \n",
       "8802  Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...  United States   \n",
       "8804  Jesse Eisenberg, Woody Harrelson, Emma Stone, ...  United States   \n",
       "8805  Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...  United States   \n",
       "\n",
       "     date_added  release_year rating duration  \\\n",
       "8793 2019-11-20          2005     PG   88 min   \n",
       "8798 2019-12-31          2014  TV-MA  131 min   \n",
       "8802 2019-11-20          2007      R  158 min   \n",
       "8804 2019-11-01          2009      R   88 min   \n",
       "8805 2020-01-11          2006     PG   88 min   \n",
       "\n",
       "                                   listed_in  \\\n",
       "8793      Children & Family Movies, Comedies   \n",
       "8798  Comedies, Dramas, International Movies   \n",
       "8802          Cult Movies, Dramas, Thrillers   \n",
       "8804                 Comedies, Horror Movies   \n",
       "8805      Children & Family Movies, Comedies   \n",
       "\n",
       "                                            description  \n",
       "8793  When a father of eight and a mother of 10 prep...  \n",
       "8798  A philandering small-town mechanic's political...  \n",
       "8802  A political cartoonist, a crime reporter and a...  \n",
       "8804  Looking to survive in a world taken over by zo...  \n",
       "8805  Dragged from civilian life, a former superhero...  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_df = res.loc[res['type']=='Movie',:]\n",
    "movie_df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "dcfe94d0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# map release year by type\n",
    "%pylab inline\n",
    "df = res.groupby(['type', 'release_year'])['release_year'].count().unstack('type').fillna(0)\n",
    "df\n",
    "fig4 = df[['Movie',  'TV Show']].plot(kind='bar', stacked=True, figsize=(15, 5), title='Release year by Type')\n",
    "plt.tight_layout()\n",
    "plt.savefig('Data/fig4.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "42a87259",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\rober\\anaconda\\Anaconda3\\envs\\PythonData\\lib\\site-packages\\ipykernel_launcher.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \n",
      "C:\\Users\\rober\\anaconda\\Anaconda3\\envs\\PythonData\\lib\\site-packages\\ipykernel_launcher.py:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n",
      "C:\\Users\\rober\\anaconda\\Anaconda3\\envs\\PythonData\\lib\\site-packages\\ipykernel_launcher.py:4: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  after removing the cwd from sys.path.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>show_id</th>\n",
       "      <th>type</th>\n",
       "      <th>title</th>\n",
       "      <th>director</th>\n",
       "      <th>cast</th>\n",
       "      <th>country</th>\n",
       "      <th>date_added</th>\n",
       "      <th>release_year</th>\n",
       "      <th>rating</th>\n",
       "      <th>duration</th>\n",
       "      <th>listed_in</th>\n",
       "      <th>description</th>\n",
       "      <th>year_added</th>\n",
       "      <th>month_added</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>s1</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Dick Johnson Is Dead</td>\n",
       "      <td>Kirsten Johnson</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United States</td>\n",
       "      <td>2021-09-25</td>\n",
       "      <td>2020</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>90 min</td>\n",
       "      <td>Documentaries</td>\n",
       "      <td>As her father nears the end of his life, filmm...</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>September</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>s2</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Blood &amp; Water</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
       "      <td>After crossing paths at a party, a Cape Town t...</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>September</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>s3</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Ganglands</td>\n",
       "      <td>Julien Leclercq</td>\n",
       "      <td>Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Crime TV Shows, International TV Shows, TV Act...</td>\n",
       "      <td>To protect his family from a powerful drug lor...</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>September</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>s4</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Jailbirds New Orleans</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Docuseries, Reality TV</td>\n",
       "      <td>Feuds, flirtations and toilet talk go down amo...</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>September</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>s5</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Kota Factory</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...</td>\n",
       "      <td>India</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, Romantic TV Shows, TV ...</td>\n",
       "      <td>In a city of coaching centers known to train I...</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>September</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  show_id     type                  title         director  \\\n",
       "0      s1    Movie   Dick Johnson Is Dead  Kirsten Johnson   \n",
       "1      s2  TV Show          Blood & Water              NaN   \n",
       "2      s3  TV Show              Ganglands  Julien Leclercq   \n",
       "3      s4  TV Show  Jailbirds New Orleans              NaN   \n",
       "4      s5  TV Show           Kota Factory              NaN   \n",
       "\n",
       "                                                cast        country  \\\n",
       "0                                                NaN  United States   \n",
       "1  Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...   South Africa   \n",
       "2  Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...            NaN   \n",
       "3                                                NaN            NaN   \n",
       "4  Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...          India   \n",
       "\n",
       "  date_added  release_year rating   duration  \\\n",
       "0 2021-09-25          2020  PG-13     90 min   \n",
       "1 2021-09-24          2021  TV-MA  2 Seasons   \n",
       "2 2021-09-24          2021  TV-MA   1 Season   \n",
       "3 2021-09-24          2021  TV-MA   1 Season   \n",
       "4 2021-09-24          2021  TV-MA  2 Seasons   \n",
       "\n",
       "                                           listed_in  \\\n",
       "0                                      Documentaries   \n",
       "1    International TV Shows, TV Dramas, TV Mysteries   \n",
       "2  Crime TV Shows, International TV Shows, TV Act...   \n",
       "3                             Docuseries, Reality TV   \n",
       "4  International TV Shows, Romantic TV Shows, TV ...   \n",
       "\n",
       "                                         description  year_added month_added  \n",
       "0  As her father nears the end of his life, filmm...      2021.0   September  \n",
       "1  After crossing paths at a party, a Cape Town t...      2021.0   September  \n",
       "2  To protect his family from a powerful drug lor...      2021.0   September  \n",
       "3  Feuds, flirtations and toilet talk go down amo...      2021.0   September  \n",
       "4  In a city of coaching centers known to train I...      2021.0   September  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Add new columns for year added and month added from column date added\n",
    "res['year_added'] = pd.DatetimeIndex(res['date_added']).year\n",
    "res['month_added'] = pd.DatetimeIndex(res['date_added']).month\n",
    "res['month_added'] = pd.to_datetime(res['month_added'], format='%m').dt.month_name()\n",
    "res.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a2bf0b05",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# graph year added by type\n",
    "year_added_gb = res.groupby(['type', 'year_added'])['year_added'].count().unstack('type').fillna(0)\n",
    "year_added_gb\n",
    "fig5 = year_added_gb[['Movie',  'TV Show']].plot(kind='bar', stacked=True, figsize=(15, 5), title='Year added by Type')\n",
    "plt.tight_layout()\n",
    "plt.savefig('Data/fig5.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ba18e7b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# graph month added by type\n",
    "month_added_gb = res.groupby(['type', 'month_added'])['month_added'].count().unstack('type').fillna(0)\n",
    "month_added_gb\n",
    "fig6 = month_added_gb[['Movie',  'TV Show']].plot(kind='bar', stacked=True, figsize=(15, 5), title='Month added by Type')\n",
    "plt.tight_layout()\n",
    "plt.savefig('Data/fig6.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "d58b19b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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SCRJkiRJasDrr7/O4MGDDS82QEQwePDgDeq1YoAhSZIkSVKDDC823IY+MwMMSZIkSZJUeQYYkiRJkiT1Ii+++CKXXHJJ2WU0nQGGJEmSJEm9iAGGJEmSJEmqvDPPPJPHHnuMvfbai2OOOYbrr79+1b7PfOYz3HDDDVx22WWMHTuWI444gve///2cc845q4654oor2G+//dhrr7046aSTWLFiRRlvY4O5jKokSZK0NlM2L7uCrpmyrOwKJPWQ888/n3nz5jFnzhxuv/12/umf/omxY8eybNky7rnnHqZNm8YVV1zB/fffz7x58xgwYACjR4/mqKOOYtNNN+Xqq6/m7rvvpl+/fpx66qlMnz6dyZMnl/221skAQ5IkSZKkXuqP/uiPOO2003juuef4yU9+wic/+Un69q39qf/hD3+YwYMHA3D00Udz11130bdvX2bNmsXo0aMBeO2119hqq61Kq39DGGBIkiRJktSLTZo0ienTpzNjxgx+8IMfrGrvuExpRJCZHHfccfzDP/xDs8tsmHNgSJIkSZLUi2y22Wa89NJLq7aPP/54vvnNbwKw2267rWq/+eabeeGFF3jttde47rrrOPDAAznssMO49tpree655wB44YUXeOKJJ5r7BrrIHhiSJEmSJPUigwcP5sADD2T33XfnyCOP5IILLmCXXXZh3Lhxqx130EEHMWnSJBYsWMCnP/1pRo0aBcC5557LRz7yEd5++2369evHxRdfzA477FDGW9kgBhiSJEmSJPUyV1555arXr776KvPnz2fixImrHbPVVltx0UUXvePc8ePHM378+B6vsbs5hESSJEmSpF7qlltu4QMf+ACnn346m2/eS1dNWk/2wJAkSZIkqZf60Ic+xJNPPvmO9uOPP57jjz+++QX1IHtgSJIkSZKkyjPAkCRJkiRJlWeAIUmSJEmSKs8AQ5IkSZIkVZ6TeEqSJEmS1I2Gn3lTt15v4flHrfOYiODYY4/l8ssvB2D58uVss8027L///tx4440bfM/vfOc7DBgwgMmTJ2/wuT3FAEOSJEmSpF5u0003Zd68ebz22mtssskm3HzzzWy33XZdvt7JJ5/cjdV1D4eQSJIkSZLUAo488khuuqnW++Oqq65i4sSJq/a98MILjBs3jpEjR3LAAQcwd+5c3n77bYYPH86LL7646riddtqJZ599lilTpnDhhRcC8Nhjj3HEEUew7777cvDBB/PII480940V1hlgRMQPIuK5iJhX13ZBRDwSEXMj4qcRsUXdvrMiYkFEPBoRh9e17xsRDxT7vhUR0f1vR5IkSZKk9jRhwgRmzJjB66+/zty5c9l///1X7Tv77LPZe++9mTt3Ll/96leZPHkyG220EWPHjuWnP/0pAPfddx/Dhw9n6623Xu26J554It/+9reZNWsWF154IaeeempT39dK69MD4zLgiA5tNwO7Z+ZI4DfAWQARsSswAditOOeSiOhTnPMvwInAzsVPx2tKkiRJkqQuGjlyJAsXLuSqq67iT/7kT1bbd9dddzFp0iQADj30UJYuXcqyZcsYP348V199NQAzZsxg/Pjxq5338ssvc88993DMMcew1157cdJJJ7F48eLmvKEO1jkHRmbeERHDO7T9Z93mL4FPFa/HAjMy8w3g8YhYAOwXEQuBQZl5L0BE/BAYB/ys0TcgSZIkSZJqPv7xj/OlL32J2267jaVLl65qz8x3HBsRfPCDH2TBggUsWbKE6667jq985SurHfP222+zxRZbMGfOnB6vfV26Yw6ME/jfIGI74Km6fYuKtu2K1x3bOxURJ0bEzIiYuWTJkm4oUZIkSZKk1nfCCSfwt3/7t+yxxx6rtR9yyCFMnz4dgNtuu40hQ4YwaNAgIoJPfOITfPGLX2SXXXZh8ODBq503aNAgRowYwY9+9COgFoT8+te/bs6b6aChVUgi4q+B5cD0lU2dHJZrae9UZk4FpgKMGjVqjcdJkiRJklQ167PsaU8ZNmwYZ5xxxjvap0yZwmc/+1lGjhzJgAEDmDZt2qp948ePZ/To0Vx22WWdXnP69OmccsopnHvuubz11ltMmDCBPffcs6fewhp1OcCIiOOAjwKH5f/2RVkEbF932DDg6aJ9WCftkiRJkiSpQS+//PI72saMGcOYMWMA2HLLLbn++us7PXfUqFHvGGIyZcqUVa9HjBjBz3/+826rtau6NIQkIo4A/gr4eGa+WrfrBmBCRGwcESOoTdZ5f2YuBl6KiAOK1UcmA50/OUmSJEmSpA7W2QMjIq4CxgBDImIRcDa1VUc2Bm4uVkP9ZWaenJkPRsQ1wEPUhpaclpkrikudQm1Fk02ozZnhBJ6SJEmSJGm9rM8qJBM7ab50LcefB5zXSftMYPcNqk6SJEmSJInuWYVEkiRJkiSpRxlgSJIkSZKkyjPAkCRJkiRJldflZVQlSZIkSVInpmzezddbttbdS5cu5bDDDgPgmWeeoU+fPgwdOhSAr33taxx++OGrjv3mN7/Jb37zGy655JLVrnHeeedx5ZVX0qdPHzbaaCO++93vsv/++zN8+HBmzpzJkCFDuvc9dYEBhiRJkiRJvdjgwYOZM2cOAFOmTGHgwIF86Utf4rvf/S4zZsxYLcCYMWMGF1xwwWrn33vvvdx4443Mnj2bjTfemOeff54333yzqe9hfTiERJIkSZKkFvSpT32KG2+8kTfeeAOAhQsX8vTTT3PQQQetdtzixYsZMmQIG2+8MQBDhgxh2223XbX/29/+Nvvssw977LEHjzzyCAAvvPAC48aNY+TIkRxwwAHMnTsXgD322IMXX3yRzGTw4MH88Ic/BGDSpEnccsstDb0fAwxJkiRJklrQ4MGD2W+//fj5z38O1HpfjB8/nohY7biPfOQjPPXUU7zvfe/j1FNP5fbbb19t/5AhQ5g9ezannHIKF154IQBnn302e++9N3PnzuWrX/0qkydPBuDAAw/k7rvv5sEHH2THHXfkzjvvBOCXv/wlBxxwQEPvxwBDkiRJkqQWNXHiRGbMmAHUAoyJEye+45iBAwcya9Yspk6dytChQxk/fjyXXXbZqv1HH300APvuuy8LFy4E4K677mLSpEkAHHrooSxdupRly5Zx8MEHc8cdd3DHHXdwyimn8MADD/C73/2OLbfckoEDBzb0XgwwJEmSJElqUePGjePWW29l9uzZvPbaa+yzzz6dHtenTx/GjBnDOeecw0UXXcSPf/zjVftWDi3p06cPy5cvByAz33GNiOCQQw7hzjvv5M4772TMmDEMHTqUa6+9loMPPrjh92KAIUmSJElSixo4cCBjxozhhBNO6LT3BcCjjz7K/PnzV23PmTOHHXbYYa3XPeSQQ5g+fToAt912G0OGDGHQoEFsv/32PP/888yfP58dd9yRgw46iAsvvLBbAgxXIZEkSZIkqTutY9nTZps4cSJHH330qqEkHb388sucfvrpvPjii/Tt25eddtqJqVOnrvWaU6ZM4bOf/SwjR45kwIABTJs2bdW+/fffnxUrVgBw8MEHc9ZZZ71j4tCuiM66fVTJqFGjcubMmWWXIUmSpHY1ZfOyK+iaiv0BJbWyhx9+mF122aXsMnqlzp5dRMzKzFEdj3UIiSRJkiRJqjwDDEmSJEmSVHkGGJIkSZIkNajq0zNU0YY+MwMMSZIkSZIa0L9/f5YuXWqIsQEyk6VLl9K/f//1PsdVSCRJkiRJasCwYcNYtGgRS5YsKbuUXqV///4MGzZsvY83wJAkSZIkqQH9+vVjxIgRZZfR8hxCIkmSJEmSKs8AQ5IkSZIkVZ4BhiRJkiRJqjwDDEmSJEmSVHkGGJIkSZIkqfIMMCRJkiRJUuUZYEiSJEmSpMozwJAkSZIkSZVngCFJkiRJkirPAEOSJEmSJFWeAYYkSZIkSao8AwxJkiRJklR5BhiSJEmSJKny1hlgRMQPIuK5iJhX17ZlRNwcEfOL3++u23dWRCyIiEcj4vC69n0j4oFi37ciIrr/7UiSJEmSpFa0Pj0wLgOO6NB2JnBrZu4M3FpsExG7AhOA3YpzLomIPsU5/wKcCOxc/HS8piRJkiRJUqfWGWBk5h3ACx2axwLTitfTgHF17TMy843MfBxYAOwXEdsAgzLz3sxM4Id150iSJEmSJK1VV+fA2DozFwMUv7cq2rcDnqo7blHRtl3xumN7pyLixIiYGREzlyxZ0sUSJUmSJElSq+juSTw7m9ci19LeqcycmpmjMnPU0KFDu604SZIkSZLUO3U1wHi2GBZC8fu5on0RsH3dccOAp4v2YZ20S5IkSZIkrVNXA4wbgOOK18cB19e1T4iIjSNiBLXJOu8vhpm8FBEHFKuPTK47R5IkSZIkaa36ruuAiLgKGAMMiYhFwNnA+cA1EfE54EngGIDMfDAirgEeApYDp2XmiuJSp1Bb0WQT4GfFjyRJkiRJ0jqtM8DIzIlr2HXYGo4/Dzivk/aZwO4bVJ0kSZIkSRLdP4mnJEmSJElStzPAkCRJkiRJlWeAIUmSJEmSKs8AQ5IkSZIkVZ4BhiRJkiRJqjwDDEmSJEmSVHkGGJIkSZIkqfIMMCRJkiRJUuUZYEiSJEmSpMozwJAkSZIkSZVngCFJkiRJkirPAEOSJEmSJFWeAYYkSZIkSao8AwxJkiRJklR5BhiSJEmSJKnyDDAkSZIkSVLl9S27AEmS1EtN2bzsCrpuyrKyK5AkSRvIHhiSJEmSJKnyDDAkSZIkSVLlGWBIkiRJkqTKM8CQJEmSJEmVZ4AhSZIkSZIqzwBDkiRJkiRVngGGJEmSJEmqPAMMSZIkSZJUeQYYkiRJkiSp8gwwJEmSJElS5RlgSJIkSZKkyjPAkCRJkiRJlWeAIUmSJEmSKq+hACMi/m9EPBgR8yLiqojoHxFbRsTNETG/+P3uuuPPiogFEfFoRBzeePmSJEmSJKkddDnAiIjtgD8HRmXm7kAfYAJwJnBrZu4M3FpsExG7Fvt3A44ALomIPo2VL0mSJEmS2kGjQ0j6AptERF9gAPA0MBaYVuyfBowrXo8FZmTmG5n5OLAA2K/B+0uSJEmSpDbQ5QAjM38HXAg8CSwGlmXmfwJbZ+bi4pjFwFbFKdsBT9VdYlHRJkmSJEmStFaNDCF5N7VeFSOAbYFNI+LYtZ3SSVuu4donRsTMiJi5ZMmSrpYoSZIkSZJaRCNDSD4EPJ6ZSzLzLeAnwB8Cz0bENgDF7+eK4xcB29edP4zakJN3yMypmTkqM0cNHTq0gRIlSZIkSVIraCTAeBI4ICIGREQAhwEPAzcAxxXHHAdcX7y+AZgQERtHxAhgZ+D+Bu4vSZIkSZLaRN+unpiZ90XEtcBsYDnwK2AqMBC4JiI+Ry3kOKY4/sGIuAZ4qDj+tMxc0WD9kiRJkiSpDXQ5wADIzLOBszs0v0GtN0Znx58HnNfIPSVJkiRJUvtpdBlVSZIkSZKkHmeAIUmSJEmSKs8AQ5IkSZIkVZ4BhiRJkiRJqjwDDEmSJEmSVHkGGJIkSZIkqfIMMCRJkiRJUuUZYEiSJEmSpMozwJAkSZIkSZVngCFJkiRJkirPAEOSJEmSJFWeAYYkSZIkSaq8vmUXIEmSJFXZ8NevLLuELllYdgGS1M3sgSFJkiRJkirPAEOSJEmSJFWeAYYkSZIkSao8AwxJkiRJklR5BhiSJEmSJKnyDDAkSZIkSVLlGWBIkiRJkqTKM8CQJEmSJEmVZ4AhSZIkSZIqzwBDkiRJkiRVngGGJEmSJEmqPAMMSZIkSZJUeQYYkiRJkiSp8gwwJEmSJElS5RlgSJIkSZKkyjPAkCRJkiRJlWeAIUmSJEmSKs8AQ5IkSZIkVV5DAUZEbBER10bEIxHxcER8MCK2jIibI2J+8fvddcefFRELIuLRiDi88fIlSZIkSVI7aLQHxj8DP8/MDwB7Ag8DZwK3ZubOwK3FNhGxKzAB2A04ArgkIvo0eH9JkiRJktQGuhxgRMQg4BDgUoDMfDMzXwTGAtOKw6YB44rXY4EZmflGZj4OLAD26+r9JUmSJElS+2ikB8aOwBLgXyPiVxHx/YjYFNg6MxcDFL+3Ko7fDniq7vxFRZskSZIkSdJaNRJg9AX2Af4lM/cGXqEYLrIG0UlbdnpgxIkRMTMiZi5ZsqSBEiVJkiRJUitoJMBYBCzKzPuK7WupBRrPRsQ2AMXv5+qO377u/GHA051dODOnZuaozBw1dOjQBkqUJEmSJEmtoG9XT8zMZyLiqYh4f2Y+ChwGPFT8HAecX/y+vjjlBuDKiPgGsC2wM3B/I8VLkqTyDH/9yrJL6LKFZRcgSZI2WJcDjMLpwPSIeBfwW+Cz1Hp1XBMRnwOeBI4ByMwHI+IaagHHcuC0zFzR4P0lSZIkSVIbaCjAyMw5wKhOdh22huPPA85r5J6SJEmSJKn9NDIHhiRJkiRJUlMYYEiSJEmSpMozwJAkSZIkSZVngCFJkiRJkirPAEOSJEmSJFWeAYYkSZIkSao8AwxJkiRJklR5BhiSJEmSJKnyDDAkSZIkSVLlGWBIkiRJkqTKM8CQJEmSJEmVZ4AhSZIkSZIqzwBDkiRJkiRVngGGJEmSJEmqPAMMSZIkSZJUeQYYkiRJkiSp8gwwJEmSJElS5RlgSJIkSZKkyjPAkCRJkiRJlWeAIUmSJEmSKs8AQ5IkSZIkVZ4BhiRJkiRJqjwDDEmSJEmSVHkGGJIkSZIkqfIMMCRJkiRJUuX1LbsASZK6w/Azbyq7hC5beP5RZZcgSZJUefbAkCRJkiRJlWeAIUmSJEmSKs8AQ5IkSZIkVZ4BhiRJkiRJqjwDDEmSJEmSVHkNBxgR0ScifhURNxbbW0bEzRExv/j97rpjz4qIBRHxaEQc3ui9JUmSJElSe+iOHhhnAA/XbZ8J3JqZOwO3FttExK7ABGA34Ajgkojo0w33lyRJkiRJLa6hACMihgFHAd+vax4LTCteTwPG1bXPyMw3MvNxYAGwXyP3lyRJkiRJ7aHRHhjfBL4MvF3XtnVmLgYofm9VtG8HPFV33KKiTZIkSZIkaa26HGBExEeB5zJz1vqe0klbruHaJ0bEzIiYuWTJkq6WKEmSJEmSWkQjPTAOBD4eEQuBGcChEXEF8GxEbANQ/H6uOH4RsH3d+cOApzu7cGZOzcxRmTlq6NChDZQoSZIkSZJaQZcDjMw8KzOHZeZwapNz/iIzjwVuAI4rDjsOuL54fQMwISI2jogRwM7A/V2uXJIkSZIktY2+PXDN84FrIuJzwJPAMQCZ+WBEXAM8BCwHTsvMFT1wf0mSJEmS1GK6JcDIzNuA24rXS4HD1nDcecB53XFPSZIkSZLUPhpdhUSSJEmSJKnHGWBIkiRJkqTKM8CQJEmSJEmVZ4AhSZIkSZIqzwBDkiRJkiRVngGGJEmSJEmqPAMMSZIkSZJUeQYYkiRJkiSp8gwwJEmSJElS5RlgSJIkSZKkyjPAkCRJkiRJlWeAIUmSJEmSKq9v2QVIUisafuZNZZfQJQvPP6rsEiRJkqRO2QNDkiRJkiRVngGGJEmSJEmqPIeQSJIkSaqWKZuXXUHXTVlWdgVSy7IHhiRJkiRJqjwDDEmSJEmSVHkGGJIkSZIkqfIMMCRJkiRJUuUZYEiSJEmSpMozwJAkSZIkSZVngCFJkiRJkirPAEOSJEmSJFWeAYYkSZIkSao8AwxJkiRJklR5BhiSJEmSJKnyDDAkSZIkSVLlGWBIkiRJkqTKM8CQJEmSJEmVZ4AhSZIkSZIqr8sBRkRsHxH/FREPR8SDEXFG0b5lRNwcEfOL3++uO+esiFgQEY9GxOHd8QYkSZIkSVLra6QHxnLgLzJzF+AA4LSI2BU4E7g1M3cGbi22KfZNAHYDjgAuiYg+jRQvSZIkSZLaQ5cDjMxcnJmzi9cvAQ8D2wFjgWnFYdOAccXrscCMzHwjMx8HFgD7dfX+kiRJkiSpfXTLHBgRMRzYG7gP2DozF0Mt5AC2Kg7bDniq7rRFRVtn1zsxImZGxMwlS5Z0R4mSJEmSJKkXazjAiIiBwI+BL2Tm/6zt0E7asrMDM3NqZo7KzFFDhw5ttERJkiRJktTLNRRgREQ/auHF9Mz8SdH8bERsU+zfBniuaF8EbF93+jDg6UbuL0mSJEmS2kPfrp4YEQFcCjycmd+o23UDcBxwfvH7+rr2KyPiG8C2wM7A/V29vyRJkqTWNPz1K8suocsWll2A1MK6HGAABwKTgAciYk7R9v+oBRfXRMTngCeBYwAy88GIuAZ4iNoKJqdl5ooG7i9JkiRJktpElwOMzLyLzue1ADhsDeecB5zX1XtKkiRJkqT21EgPDEmSJElSK5iyedkVdN2UZWVXoCbplmVUJUmSJEmSepI9MKQ2MPzMm8ouoUsWnn9U2SVIkiRJqggDDEmSJEmSytBbh+6UNGzHISSSJEmSJKnyDDAkSZIkSVLlGWBIkiRJkqTKM8CQJEmSJEmVZ4AhSZIkSZIqzwBDkiRJkiRVngGGJEmSJEmqPAMMSZIkSZJUeX3LLkCSJEkbYMrmZVfQNVOWlV2BJKmXsweGJEmSJEmqPAMMSZIkSZJUeQYYkiRJkiSp8gwwJEmSJElS5RlgSJIkSZKkyjPAkCRJkiRJlWeAIUmSJEmSKq9v2QVIkiRJkso1/PUryy6hyxaWXUADeutzX1jSfe2BIUmSJEmSKs8eGJIkSb2I39ZJktqVPTAkSZIkSVLlGWBIkiRJkqTKM8CQJFf3gGoAAA6CSURBVEmSJEmVZ4AhSZIkSZIqzwBDkiRJkiRVngGGJEmSJEmqPAMMSZIkSZJUeQYYkiRJkiSp8vo2+4YRcQTwz0Af4PuZeX6za1hp+Jk3lXXrhi08/6iyS5AkSZIkqWma2gMjIvoAFwNHArsCEyNi12bWIEmSJEmSep9mDyHZD1iQmb/NzDeBGcDYJtcgSZIkSZJ6mcjM5t0s4lPAEZn5Z8X2JGD/zPx8h+NOBE4sNt8PPNq0IrvPEOD5sotoQz735vOZN5/PvPl85uXwuTefz7z5fObN5zMvh8+9+XrzM98hM4d2bGz2HBjRSds7EpTMnApM7flyek5EzMzMUWXX0W587s3nM28+n3nz+czL4XNvPp958/nMm89nXg6fe/O14jNv9hCSRcD2ddvDgKebXIMkSZIkSeplmh1g/Dewc0SMiIh3AROAG5pcgyRJkiRJ6mWaOoQkM5dHxOeB/6C2jOoPMvPBZtbQRL16CEwv5nNvPp958/nMm89nXg6fe/P5zJvPZ958PvNy+Nybr+WeeVMn8ZQkSZIkSeqKZg8hkSRJkiRJ2mAGGJIkSZIkqfIMMCRJkiRJUuUZYEiSJLW5iNguIt5T/DR1kndBRGxddg1Sd4mIL0dEn7LraCcRMbLsGprFAKMbRMTYiDitbvu+iPht8fOpMmuT1PtFxEYRsVHx+l0RsU9EbFl2Xe0mIvpExGfKrqNdRMRvyq6hlUXEWRHxt3VN9wI3Av8J/GU5VbWXiNg8Ik6IiFuA2WXX04oi4qCImFy3fW1E/KL4ObTM2lrcDsCsiDiw7ELayK8iYkFE/H1E7Fp2MT3JAKN7fBm4oW57Y2A0MAY4pYyC2kXxB8WQuu13RcSJEfFwmXW1KsO65ouIccBi4HcRMRa4E7gQmBsRHyu1uBYVEYOKP+4uioiPRM3pwG+BPy27vlYUES9FxP8UPy9FxEvAe1e2l11fizoG+Hrd9tLMHAnsBhxVTkmtLyI2iYjxEXE9MA/4BnAusH25lbWsc4CZddvvpxbQTaH2+V09IDNPA04A/jEiLo2IUcWXL/tExD5l19ei5gLjqP19f0NE/DoizoyI4aVW1QPsItg93pWZT9Vt35WZS4GlEbFpWUW1uoiYAHwXeCUi5lP7x+hy4L8BvyXtGV8GJtRtrwzrNgX+Fbi2jKJa3NnAnsAmwK+B0Zn5aETsAPwY+Lcyi2tRlwO/p/aN9J9R+7D7LmBsZs4ps7AWdhmwOfCXmfksQEQ8npkjSq2qxWXmK3Wb/1y0rYiITUoqqaVFxHTgEGq9XC4CfgEsyMzbyqyrxQ3KzIfqtudn5iyAiPiHkmpqC5k5OyL+mtpnlfcCuXIXYO+X7peZOQ/4a+CvI2I/ap/Z74yIpzLzD8str/sYYHSPd9dvZObn6zaHNrmWdvIVYN/MXFCkufcCEzLzpyXX1coM60qQmc8ARMSTmflo0fbEymEl6nY7ZuYeABHxfeB54D2Z+VK5ZbWuzDw9IvYFroqI66j9cZfrOE2NGRgR/TLzLYDMvAwgIjYGBpVZWAvbnVo4+jDwSBEW+d95z9qifiMzj67bdN6RHhIRW1Hr4bUjcGhm/rrkktpB1G9k5v3A/RHxF9SC05bhh9/ucV9E/J+OjRFxEnB/CfW0izczcwHUUl7gccOLHmdYV4K6oOKEurY+1HoFqPu9tfJFZq6g9v8thhc9rPhW9EPF5u1A/xLLaQfXAt+NiAErG4og+jvYm65HZOae1IahDQJuiYg7gc0i4g/KraylPRIR7xgSFREfBR4toZ528UtqQ14PWhleFM9cPeeCzhqz5vZmF9OTItPgt1FFyngd8Ab/OwnTvtS6149b2R1W3SsiFlEbO7rSF+u3M/Mb7zhJDSm6v96Wmd/r0H4SMCYzJ5ZTWeuKiNHAA5n5eof24dQ+GFxRRl2tLCJWACu71ge14TuvFq8zM/12uodFxDbA3pn572XX0qqKEPQ8asOkniia3wNcCnwlM5eXVVu7iIhRwKeBTwGLWqmLd1VExE7ATcA9rP4Z/Q+Bj2amkwX3gIgYmplLOrTNzkznv+ghEfFl4OvFFy8tzQCjGxWzGe9WbD6Ymb8os55WFxFnr21/Zp7TrFrahWGdpGaLiA9n5s1l19Gqivkudio2F2Tma2XW044iIoBDWu1b0qoohkV9hrrP6MCVHb8YUM+KiF9l5t5l19GqIuJi4EDgtMy8u+x6epIBhqQNZlhXDRHxs8w8suw6pJ5UzP3ynrLraAcR8dHMvLHsOlpVRHxrbfsz88+bVUs7KVbz2olab8b/KLuedhARF1ELie6pa9uvmJdBPaSYE/DbwCPAvwBvr9xXDLdvCQYY6rU6rF/fUWbm3zetmDYREf2Bkyk+CACX2s24Z61lubEAbszMbZpZj9QTIuKGNe2iNgGckwQ3gV28e1ZEvElt6dRrgKd556R708qoq5VFxCXUvnC5BzgM+Dc/H/a8iDiD2goY2wBXA1e5ildzRMQYaiu/PEDdyi+Z2TIrvxhgqNcqZtXtaFPgc8DgzBzY5JJaXkRcTW2CwzuBI4GFmfmFcqtqbcV8DLfT4YNu4YDMdLlD9XoR8XvgWODljruAqzPT1QKawC7ePSsiBgPHAOOB5dT+sPtxZv6+1MJaWETMA/YsVnwZANyZmfuWXVe7KJZ8n1D89AeuAmY490j367Dyy6mtvPKLAYZaQkRsBpxBLby4htokNs+VW1XriYgH6paX7Avc77d1Pav48PWJzJzfyb6nMnP7EsqSulVE/Az4x8z8r0723ZGZLbUEXBXYxbtcEbEdMJHaBOR/lZmXl1xSS+rYq8heRuWJiL2BHwAjM7NP2fW0moj4LXA+8L0s/sBv1WGBfcsuQGpERGxJ7R//zwDTgH38JqNH1S8vubw275h62BTWvOT16U2sQ+oxa5vLxfCix8wHvl6s+LKyi7fhRRMUQwMnAh8GfgbMKreilvaBiJhbvA7gvcX2ylWlRpZXWuuLiH7AEdR6YBxGrUepk+z3jP07rvwC/B3QcgGGPTDUa0XEBcDRwFTg4szs2PVY3czlJSU1S6t+c1Q1dvFunog4B/go8DAwA/i580j1rOK/7zXKzCfWtl9dExEfphbSHQXcT+2/9+sy85W1nqhu1arDAg0w1GtFxNvUlvNczv9OUgP+Ma0WFxE3ZuZHy65D6kl29W4+u3j3rOJzy2+BlUvVrvzsYm+AJjIc7XkR8SvgEmpzvLxQdj3toJ2GBTqERL1WZq6pW73U6rYruwCpCRyj1gR28W6qEWUXIKBFu9VXTWZ+r+wa2kzbDAu0B4Yk9TIR8YPMPKHsOqTu0k7fHFWFXbyrwd4Azdeq3eqrJCIWAd9Y0/7MXOM+NaYdhgUaYEiSpFJFxBnUPmzVf3M0p9yqWptdvKvBoVI9y3C0HBGxGPjOmvZnpr28mqBVhwUaYEhShUXEWGBYZl5cbN8HDC12fzkzry2tOKmbtcM3R1Xht9DV4P8OPctwtBwGc+VZw7DAqzLzulIL60YGGJJUYRFxNzAhM58qtudQ+wdpU+BfM/OwMuuTekqrfnNUFXbxbj57A5THcLS5DOaar52GBToJoiRV27tWhheFuzJzaWY+SS3EkFpGRPSLiI9FxHTgZ8BvgE+WXFar6gNstpYfdb+Vk+wtjIivRcRehhfNkZlPZObXij+qPw18gtpytuoZfrnSfP8I3Avskpkfy8zprRhegD0wJKnSImJBZu60hn2PZeZ7m12T1N3a6ZujqrCLd3nsDdB87dCtXu2tnXq9GGBIUoUV30Tf1nE5sog4CRiTmRPLqUzqPk4o2Xzt9GG3yhwq1bMMR9Uu2mlYYN+yC5AkrdX/Ba6LiE8Ds4u2fYGNgXGlVSV1s44hnXqcXbxLsobeAK7K0DP+kVo4+iXDUbW4lcMCW549MCSpF4iIQ4Hdis0HM/MXZdYjdad2+uZI7cveAM1nTyO1i3YaFmgPDEmqsIjoD5wM7AQ8AFyamcvLrUrqdm3zzZHamr0Bmm9oRHxxTTsNR9VCouwCmsUAQ5KqbRrwFnAncCSwC/CFUiuSut/izLQLvVqeQ6WaznBU7aJthgUaYEhSte2amXsARMSl1LodS62mbb45UluzN0DzGY6qLbRTry4DDEmqtrdWvsjM5RH+naeW1DbfHKmt2Rug+fxHU2oxTuIpSRUWESuAlRO8BbAJ8GrxOjNzUFm1SZLWXztNslcVEbFlO30zLbUDe2BIUoVlZp+ya5AkdQt7AzSZ4YXUeuyBIUmSJPUwewNIUuMMMCRJkiRJUuVtVHYBkiRJkiRJ62KAIUmSJEmSKs8AQ5IkVUJEfCEiBtRt/3tEbFFmTZIkqTqcA0OSJDVNRAS1zx9vd7JvITAqM59vemGSJKny7IEhSZJ6VEQMj4iHI+ISYDZwaUTMjIgHI+Kc4pg/B7YF/isi/qtoWxgRQ+rO/15xzn9GxCbFMaMjYm5E3BsRF0TEvLLepyRJ6lkGGJIkqRneD/wwM/cG/iIzRwEjgT+KiJGZ+S3gaeCPM/OPOzl/Z+DizNwNeBH4ZNH+r8DJmflBYEWPvwtJklQaAwxJktQMT2TmL4vXfxoRs4FfAbsBu67H+Y9n5pzi9SxgeDE/xmaZeU/RfmW3VixJkiqlb9kFSJKktvAKQESMAL4EjM7M30fEZUD/9Tj/jbrXK4BNgOjuIiVJUnXZA0OSJDXTIGphxrKI2Bo4sm7fS8Bm63uhzPw98FJEHFA0Tei2KiVJUuXYA0OSJDVNZv46In4FPAj8Fri7bvdU4GcRsXgN82B05nPA9yLiFeA2YFl31itJkqrDZVQlSVKvFREDM/Pl4vWZwDaZeUbJZUmSpB5gDwxJktSbHRURZ1H7TPMEcHy55UiSpJ5iDwxJkiRJklR5TuIpSZIkSZIqzwBDkiRJkiRVngGGJEmSJEmqPAMMSZIkSZJUeQYYkiRJkiSp8v4/42gCWbvR5/4AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# graph ratings by type\n",
    "rating_gb = res.groupby(['type', 'rating'])['rating'].count().unstack('type').fillna(0)\n",
    "rating_gb\n",
    "fig7 = rating_gb[['Movie',  'TV Show']].plot(kind='bar', stacked=True, figsize=(15, 5), title='Ratings by Type')\n",
    "plt.tight_layout()\n",
    "plt.savefig('Data/fig7.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "6f86eed2",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\rober\\anaconda\\Anaconda3\\envs\\PythonData\\lib\\site-packages\\ipykernel_launcher.py:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n"
     ]
    }
   ],
   "source": [
    "# duration by type - Movies\n",
    "movie_df = res.loc[res['type']=='Movie',:]\n",
    "movie_df['duration(int)'] = pd.to_numeric(movie_df['duration'].str.split().str.get(0))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "9da64286",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\rober\\anaconda\\Anaconda3\\envs\\PythonData\\lib\\site-packages\\ipykernel_launcher.py:4: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  after removing the cwd from sys.path.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "movie_df.dtypes\n",
    "bins = [0,15,30,60,75,90,300]\n",
    "labels = ['<15mins', '15-30mins','30-60mins', '60-75 mins', '75-90 mins','90mins+']\n",
    "movie_df['duration interval'] = pd.cut(movie_df['duration(int)'],bins=bins, labels=labels)\n",
    "length_data = movie_df['duration interval'].value_counts()\n",
    "\n",
    "fig8 = length_data.plot(kind = \"bar\", figsize=(12,10),color=\"red\", title=\"Netflix movies by duration\")\n",
    "fig8.set_xlabel(\"Duration (minutes)\")\n",
    "fig8.set_ylabel(\"Number of Movies\")\n",
    "plt.savefig('Data/fig8.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5a9a780f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\rober\\anaconda\\Anaconda3\\envs\\PythonData\\lib\\site-packages\\ipykernel_launcher.py:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>show_id</th>\n",
       "      <th>type</th>\n",
       "      <th>title</th>\n",
       "      <th>director</th>\n",
       "      <th>cast</th>\n",
       "      <th>country</th>\n",
       "      <th>date_added</th>\n",
       "      <th>release_year</th>\n",
       "      <th>rating</th>\n",
       "      <th>duration</th>\n",
       "      <th>listed_in</th>\n",
       "      <th>description</th>\n",
       "      <th>year_added</th>\n",
       "      <th>month_added</th>\n",
       "      <th>duration(int)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>s2</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Blood &amp; Water</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
       "      <td>After crossing paths at a party, a Cape Town t...</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>September</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>s3</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Ganglands</td>\n",
       "      <td>Julien Leclercq</td>\n",
       "      <td>Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Crime TV Shows, International TV Shows, TV Act...</td>\n",
       "      <td>To protect his family from a powerful drug lor...</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>September</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>s4</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Jailbirds New Orleans</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Docuseries, Reality TV</td>\n",
       "      <td>Feuds, flirtations and toilet talk go down amo...</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>September</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>s5</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Kota Factory</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...</td>\n",
       "      <td>India</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, Romantic TV Shows, TV ...</td>\n",
       "      <td>In a city of coaching centers known to train I...</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>September</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>s6</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Midnight Mass</td>\n",
       "      <td>Mike Flanagan</td>\n",
       "      <td>Kate Siegel, Zach Gilford, Hamish Linklater, H...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>TV Dramas, TV Horror, TV Mysteries</td>\n",
       "      <td>The arrival of a charismatic young priest brin...</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>September</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  show_id     type                  title         director  \\\n",
       "1      s2  TV Show          Blood & Water              NaN   \n",
       "2      s3  TV Show              Ganglands  Julien Leclercq   \n",
       "3      s4  TV Show  Jailbirds New Orleans              NaN   \n",
       "4      s5  TV Show           Kota Factory              NaN   \n",
       "5      s6  TV Show          Midnight Mass    Mike Flanagan   \n",
       "\n",
       "                                                cast       country date_added  \\\n",
       "1  Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...  South Africa 2021-09-24   \n",
       "2  Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...           NaN 2021-09-24   \n",
       "3                                                NaN           NaN 2021-09-24   \n",
       "4  Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...         India 2021-09-24   \n",
       "5  Kate Siegel, Zach Gilford, Hamish Linklater, H...           NaN 2021-09-24   \n",
       "\n",
       "   release_year rating   duration  \\\n",
       "1          2021  TV-MA  2 Seasons   \n",
       "2          2021  TV-MA   1 Season   \n",
       "3          2021  TV-MA   1 Season   \n",
       "4          2021  TV-MA  2 Seasons   \n",
       "5          2021  TV-MA   1 Season   \n",
       "\n",
       "                                           listed_in  \\\n",
       "1    International TV Shows, TV Dramas, TV Mysteries   \n",
       "2  Crime TV Shows, International TV Shows, TV Act...   \n",
       "3                             Docuseries, Reality TV   \n",
       "4  International TV Shows, Romantic TV Shows, TV ...   \n",
       "5                 TV Dramas, TV Horror, TV Mysteries   \n",
       "\n",
       "                                         description  year_added month_added  \\\n",
       "1  After crossing paths at a party, a Cape Town t...      2021.0   September   \n",
       "2  To protect his family from a powerful drug lor...      2021.0   September   \n",
       "3  Feuds, flirtations and toilet talk go down amo...      2021.0   September   \n",
       "4  In a city of coaching centers known to train I...      2021.0   September   \n",
       "5  The arrival of a charismatic young priest brin...      2021.0   September   \n",
       "\n",
       "   duration(int)  \n",
       "1            NaN  \n",
       "2            NaN  \n",
       "3            NaN  \n",
       "4            NaN  \n",
       "5            NaN  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# duration by type - TV Shows\n",
    "tvshow_df = res.loc[res['type']=='TV Show',:]\n",
    "tvshow_df['duration(int)'] = pd.to_numeric(movie_df['duration'].str.split().str.get(0))\n",
    "tvshow_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "377149f5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# duration by type - Tv - Shows\n",
    "season_data = tvshow_df['duration'].value_counts()\n",
    "\n",
    "# Graph\n",
    "fig9 = season_data.plot(kind = \"bar\", figsize=(12,10),color=\"red\", title=\"Netflix TV shows by duration\")\n",
    "fig9.set_xlabel(\"No of seasons\")\n",
    "fig9.set_ylabel(\"Count\")\n",
    "plt.savefig('Data/fig8.png')"
   ]
>>>>>>> netflix_rf
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
